<?py # -*- coding: utf-8 -*- ?>
<?xml version="1.0" encoding="UTF-8"?>
<gexf xmlns="http://www.gexf.net/1.1draft" xmlns:viz="http://www.gephi.org/gexf/viz" version="1.1">
<meta></meta>
<graph mode="dynamic" timeformat="date">
<attributes class="node" type="static">
    <attribute id="0" title="weight" type="integer"></attribute>
    <attribute id="1" title="category" type="string"></attribute>
    <attribute id="2" title="embassy" type="string"></attribute>
    <attribute id="3" title="classification" type="string"></attribute>
</attributes>
<nodes>
<?py ngramcache=[] ?>
<?py from datetime import datetime ?>
<?py for ngram in storage.ngrams.find(timeout=False): ?>
    <?py weight = len(ngram['edges']['Document'].keys()) ?>
    <?py if weight < minoccs: continue ?>
    <?py #endif ?>
    <?py ngramcache+=[ngram['_id']] ?>
    <node id="${ngram['_id']}" label="${ ngram['label'] }">
        <attvalues>
            <attvalue for="0" value="${ weight }" />
            <attvalue for="1" value="NGram" />
        </attvalues>
    </node>
<?py #endfor ?>
<?py from datetime import datetime ?>
<?py for cable in storage.cables.find(timeout=False): ?>
    <?py weight = len(cable['edges']['NGram'].keys()) ?>
    <node id="${cable['_id']}" label="${ cable['label'] }" start="${ cable['date_time'].strftime('%Y-%m-%d')}">
        <attvalues>
            <attvalue for="0" value="${ weight }" />
            <attvalue for="1" value="Document" />
            <attvalue for="2" value="${ cable['origin'] }" />
            <attvalue for="3" value="${ cable['classification'] }" />
        </attvalues>
    </node>
<?py #endfor ?>
    </nodes>
<edges>
<?py i = 0 ?>
<?py for ngramid in ngramcache: ?>
    <?py ngram = storage.ngrams.find_one({'_id':ngramid}) ?>
    <?py for targetcategory in ngram['edges'].keys(): ?>
        <?py if targetcategory not in ["NGram","Document"]: continue ?>
        <?py #endif ?>
        <?py for target, weight in ngram['edges'][targetcategory].iteritems(): ?>
            <?py if targetcategory=="NGram": ?>
                <?py if target not in ngramcache: continue ?>
                <?py #endif ?>
            <?py #endif ?>
            <?py if weight < mincoocs: continue ?>
            <?py #endif ?>
    <edge id="#{i}" source="#{ngram['_id']}" target="#{target}" type="mutual" weight="${weight}"></edge>
            <?py i += 1 ?>
        <?py #endfor ?>
    <?py #endfor ?>
<?py #endfor ?>
</edges>
</graph>
</gexf>
